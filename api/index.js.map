{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/theme/create-emotion-cache.ts", "../app/theme/index.ts", "/Users/lucasshadler/ff/remix-trial/app/root.tsx", "../app/components/Layout.tsx", "../app/components/Header.tsx", "/Users/lucasshadler/ff/remix-trial/app/routes/logout.ts", "../app/sessions/index.ts", "/Users/lucasshadler/ff/remix-trial/app/routes/index.tsx", "/Users/lucasshadler/ff/remix-trial/app/routes/login.tsx", "../app/mock-api/ms-delay.ts", "/Users/lucasshadler/ff/remix-trial/app/routes/table.tsx", "../app/mock-api/fake-data.ts", "../app/mock-api/index.ts", "../app/components/Table.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\nimport createEmotionCache from \"./theme/create-emotion-cache\";\nimport { CacheProvider } from \"@emotion/react\";\nimport { ThemeProvider } from \"@mui/material\";\nimport { theme } from \"~/theme\";\n\nconst serverSideCache = createEmotionCache();\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <CacheProvider value={serverSideCache}>\n      <ThemeProvider theme={theme}>\n        <RemixServer context={remixContext} url={request.url} />\n      </ThemeProvider>\n    </CacheProvider>\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import createCache from \"@emotion/cache\";\n\nexport default function createEmotionCache() {\n  return createCache({ key: \"css\" });\n}\n", "import { createTheme } from \"@mui/material\";\n\nexport const theme = createTheme();\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport { Layout } from \"~/components/Layout\";\nimport { html } from \"mdast-util-to-markdown/lib/handle/html\";\nimport { ThemeProvider } from \"@mui/material\";\nimport { theme } from \"./theme\";\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Remix MUI Table Demo\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <html lang=\"en\">\n        <head>\n          <Meta />\n          <Links />\n        </head>\n        <body>\n          <Layout>\n            <Outlet />\n          </Layout>\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n        </body>\n      </html>\n    </ThemeProvider>\n  );\n}\n", "import { useLoaderData } from \"@remix-run/react\";\nimport { LoaderFunction } from \"@remix-run/node\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { Header } from \"~/components/Header\";\nimport Box from \"@mui/material/Box\";\n\ninterface LayoutPropsT {}\n\nconst Content = styled(Box)`\n  font-family: \"system-ui, sans-serif\";\n  line-height: \"1.4\";\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Layout: React.FC<LayoutPropsT> = ({ children }) => {\n  return (\n    <main>\n      <Header name=\"lshadler\" />\n      <Box\n        sx={{\n          fontFamily: \"system-ui, sans-serif\",\n          lineHeight: 1.4,\n          justifyContent: \"center\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {children}\n      </Box>\n    </main>\n  );\n};\n", "import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { AppBarProps } from \"@mui/material\";\nimport { Form, Link } from \"@remix-run/react\";\n\ninterface HeaderPropsT extends AppBarProps {\n  name: string;\n}\n\nconst pages = [\n  {\n    label: \"Home\",\n    route: \"/\",\n  },\n  { label: \"Table\", route: \"/table\" },\n];\n\nexport const Header: React.FC<HeaderPropsT> = ({ name }) => {\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(\n    null\n  );\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(\n    null\n  );\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"/\"\n            sx={{\n              mr: 2,\n              display: { xs: \"none\", md: \"flex\" },\n              fontFamily: \"monospace\",\n              fontWeight: 700,\n              letterSpacing: \".3rem\",\n              color: \"inherit\",\n              textDecoration: \"none\",\n            }}\n          >\n            MyCompany\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: \"block\", md: \"none\" },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page.label} onClick={handleCloseNavMenu}>\n                  <Link to={page.route}>\n                    <Typography textAlign=\"center\">{page.label}</Typography>\n                  </Link>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"\"\n            sx={{\n              mr: 2,\n              display: { xs: \"flex\", md: \"none\" },\n              flexGrow: 1,\n              fontFamily: \"monospace\",\n              fontWeight: 700,\n              letterSpacing: \".3rem\",\n              color: \"inherit\",\n              textDecoration: \"none\",\n            }}\n          >\n            MyCompany\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            {pages.map((page) => (\n              <Button\n                key={page.label}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                <Link to={page.route}>{page.label}</Link>\n              </Button>\n            ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                {/*  TBD: Source */}\n                <Avatar alt={name} />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: \"45px\" }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              <Typography textAlign=\"center\">Hello, $username</Typography>\n              <MenuItem key=\"logout\" onClick={handleCloseUserMenu}>\n                <Form action=\"/logout\">\n                  <Button type=\"submit\">\n                    <Typography textAlign=\"center\">Logout</Typography>\n                  </Button>\n                </Form>\n              </MenuItem>\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n", "import { LoaderFunction, redirect } from \"@remix-run/node\";\nimport { destroySession, getSession } from \"~/sessions\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  return redirect(\"/login\", {\n    headers: {\n      \"Set-Cookie\": await destroySession(session),\n    },\n  });\n};\n", "// app/sessions.js\nimport { createCookieSessionStorage } from \"@remix-run/node\"; // or \"@remix-run/cloudflare\"\n\nconst { getSession, commitSession, destroySession } =\n  createCookieSessionStorage({\n    // a Cookie from `createCookie` or the CookieOptions to create one\n    cookie: {\n      name: \"__session\",\n\n      // all of these are optional\n      expires: new Date(Date.now() + 60_000),\n      httpOnly: true,\n      maxAge: 60,\n      path: \"/\",\n      sameSite: \"lax\",\n      secure: true,\n    },\n  });\n\nexport { getSession, commitSession, destroySession };\n", "import { LoaderFunction, redirect } from \"@remix-run/node\";\nimport { getSession } from \"../sessions\";\nimport { Typography } from \"@mui/material\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n\n  if (!session.get(\"username\")) {\n    return redirect(\"/login\");\n  } else {\n    return {};\n  }\n};\n\nexport default function Home() {\n  return (\n    <>\n      <Typography variant=\"h2\">Welcome to my Demo Remix App</Typography>\n      <Typography variant=\"body1\">\n        View the full code{\" \"}\n        <a href=\"https://github.com/ffluk3/remix-trial\">here</a>\n      </Typography>\n      <Typography variant=\"body1\">\n        This is an \"authenticated\" route, simulated via a session cookie built\n        into remix\n      </Typography>\n    </>\n  );\n}\n", "import { ActionFunction, LoaderFunction, redirect } from \"@remix-run/node\";\nimport { Form, useSubmit, useTransition } from \"@remix-run/react\";\nimport { Stack, TextField } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport { commitSession, getSession } from \"~/sessions\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { msDelay } from \"~/mock-api/ms-delay\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n\n  if (session.get(\"username\")) {\n    return redirect(\"/table\");\n  }\n\n  return {};\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n\n  const formData = await request.formData();\n  session.set(\"username\", formData.get(\"ff-username\"));\n\n  await msDelay(Math.random() * 2000);\n\n  return redirect(\"/table\", {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n\nexport default function Index() {\n  const { submission } = useTransition();\n\n  return (\n    <>\n      <h1>In Progress: Remix demo of form data</h1>\n      <Form method=\"post\">\n        <Stack maxWidth={500} spacing={2}>\n          <TextField name=\"ff-username\" placeholder=\"Username\"></TextField>\n          <TextField\n            name=\"ff-password\"\n            type=\"password\"\n            placeholder=\"Password\"\n          ></TextField>\n          <LoadingButton\n            loading={!!submission}\n            type=\"submit\"\n            variant=\"outlined\"\n          >\n            Sign In\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </>\n  );\n}\n", "export const msDelay = (timeInMs: number): Promise<void> =>\n  new Promise((res) => {\n    setTimeout(res, timeInMs);\n  });\n", "import { LoaderFunction, json, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { getTableData } from \"~/mock-api\";\nimport { Table } from \"../components/Table\";\nimport { msDelay } from \"~/mock-api/ms-delay\";\nimport { getSession } from \"~/sessions\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  console.log(session.data);\n\n  if (!session.get(\"username\")) {\n    return redirect(\"/login\");\n  }\n  const url = new URL(request.url);\n  const page = parseInt(url.searchParams.get(\"page\") || \"0\");\n  const limit = parseInt(url.searchParams.get(\"limit\") || \"5\");\n\n  await msDelay(Math.random() * 2000);\n  return json(await getTableData({ page, limit }));\n};\n\nexport default function TablePage() {\n  const rowData = useLoaderData();\n  return (\n    <>\n      <h1>\n        In Progress: Remix demo of server-side pagination tied to native form\n        handling\n      </h1>\n      <Table data={rowData} />\n    </>\n  );\n}\n", "export type RandomData = {\n  name: string;\n  phone: string;\n  postalZip: string;\n  country: string;\n  numberrange: number;\n  text: string;\n  alphanumeric: string;\n};\n\nexport const data: RandomData[] = [\n  {\n    name: \"Silas Britt\",\n    phone: \"(671) 452-6278\",\n    postalZip: \"848362\",\n    country: \"Spain\",\n    numberrange: 6,\n    text: \"aliquet magna a neque. Nullam ut nisi a odio semper\",\n    alphanumeric: \"YOY46LHK2OP\",\n  },\n  {\n    name: \"Kibo Macdonald\",\n    phone: \"(156) 439-5838\",\n    postalZip: \"5889\",\n    country: \"United Kingdom\",\n    numberrange: 7,\n    text: \"augue id ante dictum cursus. Nunc mauris elit, dictum eu,\",\n    alphanumeric: \"FYT10ILV5CD\",\n  },\n  {\n    name: \"Sharon Hyde\",\n    phone: \"1-683-276-8272\",\n    postalZip: \"888983\",\n    country: \"Costa Rica\",\n    numberrange: 1,\n    text: \"mauris, aliquam eu, accumsan sed, facilisis vitae, orci. Phasellus dapibus\",\n    alphanumeric: \"XEN74JLS0NH\",\n  },\n  {\n    name: \"Kibo Gentry\",\n    phone: \"1-332-823-0282\",\n    postalZip: \"8699\",\n    country: \"Canada\",\n    numberrange: 5,\n    text: \"tincidunt, nunc ac mattis ornare, lectus ante dictum mi, ac\",\n    alphanumeric: \"DLQ05BDQ2CX\",\n  },\n  {\n    name: \"Cora Wells\",\n    phone: \"(241) 466-1237\",\n    postalZip: \"1489\",\n    country: \"South Korea\",\n    numberrange: 1,\n    text: \"imperdiet dictum magna. Ut tincidunt orci quis lectus. Nullam suscipit,\",\n    alphanumeric: \"RUP95XLR7FP\",\n  },\n  {\n    name: \"Ashton Smith\",\n    phone: \"(928) 852-6844\",\n    postalZip: \"5616\",\n    country: \"Vietnam\",\n    numberrange: 3,\n    text: \"Integer eu lacus. Quisque imperdiet, erat nonummy ultricies ornare, elit\",\n    alphanumeric: \"GAT98RPH5CC\",\n  },\n  {\n    name: \"Zia Hinton\",\n    phone: \"(556) 321-3278\",\n    postalZip: \"5760\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"Sed et libero. Proin mi. Aliquam gravida mauris ut mi.\",\n    alphanumeric: \"IYR89WGE6VR\",\n  },\n  {\n    name: \"Brianna Ellison\",\n    phone: \"1-513-332-1796\",\n    postalZip: \"7252\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"ligula. Donec luctus aliquet odio. Etiam ligula tortor, dictum eu,\",\n    alphanumeric: \"TJW35LTT8QR\",\n  },\n  {\n    name: \"Brooke Walls\",\n    phone: \"1-953-834-4745\",\n    postalZip: \"41065\",\n    country: \"Nigeria\",\n    numberrange: 6,\n    text: \"Maecenas malesuada fringilla est. Mauris eu turpis. Nulla aliquet. Proin\",\n    alphanumeric: \"TRQ15SVC1CG\",\n  },\n  {\n    name: \"Nora Daugherty\",\n    phone: \"1-256-582-4865\",\n    postalZip: \"36457\",\n    country: \"Pakistan\",\n    numberrange: 5,\n    text: \"ornare, lectus ante dictum mi, ac mattis velit justo nec\",\n    alphanumeric: \"TDQ03UOS8OY\",\n  },\n  {\n    name: \"Adara Greene\",\n    phone: \"1-548-967-2847\",\n    postalZip: \"21669\",\n    country: \"Netherlands\",\n    numberrange: 3,\n    text: \"mi pede, nonummy ut, molestie in, tempus eu, ligula. Aenean\",\n    alphanumeric: \"QVQ47QVT1RR\",\n  },\n  {\n    name: \"Macaulay O'Neill\",\n    phone: \"1-414-311-4835\",\n    postalZip: \"1168\",\n    country: \"Russian Federation\",\n    numberrange: 1,\n    text: \"luctus aliquet odio. Etiam ligula tortor, dictum eu, placerat eget,\",\n    alphanumeric: \"CPF75TAC2CD\",\n  },\n  {\n    name: \"Adena Rose\",\n    phone: \"1-315-734-6117\",\n    postalZip: \"46164\",\n    country: \"Italy\",\n    numberrange: 2,\n    text: \"Morbi non sapien molestie orci tincidunt adipiscing. Mauris molestie pharetra\",\n    alphanumeric: \"TOE24YKN5KG\",\n  },\n  {\n    name: \"Adara Murphy\",\n    phone: \"(678) 844-8611\",\n    postalZip: \"398362\",\n    country: \"Colombia\",\n    numberrange: 4,\n    text: \"Nulla interdum. Curabitur dictum. Phasellus in felis. Nulla tempor augue\",\n    alphanumeric: \"UXD35OMS8MS\",\n  },\n  {\n    name: \"Brenden Bean\",\n    phone: \"(754) 709-2537\",\n    postalZip: \"3716 BU\",\n    country: \"Austria\",\n    numberrange: 6,\n    text: \"et magnis dis parturient montes, nascetur ridiculus mus. Aenean eget\",\n    alphanumeric: \"OIO77NPC4ON\",\n  },\n  {\n    name: \"Griffin Mccullough\",\n    phone: \"1-791-183-6588\",\n    postalZip: \"4526 VO\",\n    country: \"Spain\",\n    numberrange: 7,\n    text: \"Phasellus fermentum convallis ligula. Donec luctus aliquet odio. Etiam ligula\",\n    alphanumeric: \"LFR53ACJ5MW\",\n  },\n  {\n    name: \"Elton Little\",\n    phone: \"1-561-223-8354\",\n    postalZip: \"1744\",\n    country: \"Poland\",\n    numberrange: 2,\n    text: \"ornare, facilisis eget, ipsum. Donec sollicitudin adipiscing ligula. Aenean gravida\",\n    alphanumeric: \"LLX44WMR4EQ\",\n  },\n  {\n    name: \"Yuli Tyler\",\n    phone: \"(753) 273-9606\",\n    postalZip: \"11167\",\n    country: \"Australia\",\n    numberrange: 8,\n    text: \"dapibus gravida. Aliquam tincidunt, nunc ac mattis ornare, lectus ante\",\n    alphanumeric: \"HCS42JKI5UB\",\n  },\n  {\n    name: \"Mariko Finley\",\n    phone: \"1-465-988-6019\",\n    postalZip: \"29816-84933\",\n    country: \"South Africa\",\n    numberrange: 2,\n    text: \"orci quis lectus. Nullam suscipit, est ac facilisis facilisis, magna\",\n    alphanumeric: \"TPD34XWI4OW\",\n  },\n  {\n    name: \"Vivian Morris\",\n    phone: \"1-846-760-7297\",\n    postalZip: \"745942\",\n    country: \"Canada\",\n    numberrange: 2,\n    text: \"nisi. Mauris nulla. Integer urna. Vivamus molestie dapibus ligula. Aliquam\",\n    alphanumeric: \"KZD33VLC2XD\",\n  },\n  {\n    name: \"Silas Britt\",\n    phone: \"(671) 452-6278\",\n    postalZip: \"848362\",\n    country: \"Spain\",\n    numberrange: 6,\n    text: \"aliquet magna a neque. Nullam ut nisi a odio semper\",\n    alphanumeric: \"YOY46LHK2OP\",\n  },\n  {\n    name: \"Kibo Macdonald\",\n    phone: \"(156) 439-5838\",\n    postalZip: \"5889\",\n    country: \"United Kingdom\",\n    numberrange: 7,\n    text: \"augue id ante dictum cursus. Nunc mauris elit, dictum eu,\",\n    alphanumeric: \"FYT10ILV5CD\",\n  },\n  {\n    name: \"Sharon Hyde\",\n    phone: \"1-683-276-8272\",\n    postalZip: \"888983\",\n    country: \"Costa Rica\",\n    numberrange: 1,\n    text: \"mauris, aliquam eu, accumsan sed, facilisis vitae, orci. Phasellus dapibus\",\n    alphanumeric: \"XEN74JLS0NH\",\n  },\n  {\n    name: \"Kibo Gentry\",\n    phone: \"1-332-823-0282\",\n    postalZip: \"8699\",\n    country: \"Canada\",\n    numberrange: 5,\n    text: \"tincidunt, nunc ac mattis ornare, lectus ante dictum mi, ac\",\n    alphanumeric: \"DLQ05BDQ2CX\",\n  },\n  {\n    name: \"Cora Wells\",\n    phone: \"(241) 466-1237\",\n    postalZip: \"1489\",\n    country: \"South Korea\",\n    numberrange: 1,\n    text: \"imperdiet dictum magna. Ut tincidunt orci quis lectus. Nullam suscipit,\",\n    alphanumeric: \"RUP95XLR7FP\",\n  },\n  {\n    name: \"Ashton Smith\",\n    phone: \"(928) 852-6844\",\n    postalZip: \"5616\",\n    country: \"Vietnam\",\n    numberrange: 3,\n    text: \"Integer eu lacus. Quisque imperdiet, erat nonummy ultricies ornare, elit\",\n    alphanumeric: \"GAT98RPH5CC\",\n  },\n  {\n    name: \"Zia Hinton\",\n    phone: \"(556) 321-3278\",\n    postalZip: \"5760\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"Sed et libero. Proin mi. Aliquam gravida mauris ut mi.\",\n    alphanumeric: \"IYR89WGE6VR\",\n  },\n  {\n    name: \"Brianna Ellison\",\n    phone: \"1-513-332-1796\",\n    postalZip: \"7252\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"ligula. Donec luctus aliquet odio. Etiam ligula tortor, dictum eu,\",\n    alphanumeric: \"TJW35LTT8QR\",\n  },\n  {\n    name: \"Brooke Walls\",\n    phone: \"1-953-834-4745\",\n    postalZip: \"41065\",\n    country: \"Nigeria\",\n    numberrange: 6,\n    text: \"Maecenas malesuada fringilla est. Mauris eu turpis. Nulla aliquet. Proin\",\n    alphanumeric: \"TRQ15SVC1CG\",\n  },\n  {\n    name: \"Nora Daugherty\",\n    phone: \"1-256-582-4865\",\n    postalZip: \"36457\",\n    country: \"Pakistan\",\n    numberrange: 5,\n    text: \"ornare, lectus ante dictum mi, ac mattis velit justo nec\",\n    alphanumeric: \"TDQ03UOS8OY\",\n  },\n  {\n    name: \"Adara Greene\",\n    phone: \"1-548-967-2847\",\n    postalZip: \"21669\",\n    country: \"Netherlands\",\n    numberrange: 3,\n    text: \"mi pede, nonummy ut, molestie in, tempus eu, ligula. Aenean\",\n    alphanumeric: \"QVQ47QVT1RR\",\n  },\n  {\n    name: \"Macaulay O'Neill\",\n    phone: \"1-414-311-4835\",\n    postalZip: \"1168\",\n    country: \"Russian Federation\",\n    numberrange: 1,\n    text: \"luctus aliquet odio. Etiam ligula tortor, dictum eu, placerat eget,\",\n    alphanumeric: \"CPF75TAC2CD\",\n  },\n  {\n    name: \"Adena Rose\",\n    phone: \"1-315-734-6117\",\n    postalZip: \"46164\",\n    country: \"Italy\",\n    numberrange: 2,\n    text: \"Morbi non sapien molestie orci tincidunt adipiscing. Mauris molestie pharetra\",\n    alphanumeric: \"TOE24YKN5KG\",\n  },\n  {\n    name: \"Adara Murphy\",\n    phone: \"(678) 844-8611\",\n    postalZip: \"398362\",\n    country: \"Colombia\",\n    numberrange: 4,\n    text: \"Nulla interdum. Curabitur dictum. Phasellus in felis. Nulla tempor augue\",\n    alphanumeric: \"UXD35OMS8MS\",\n  },\n  {\n    name: \"Brenden Bean\",\n    phone: \"(754) 709-2537\",\n    postalZip: \"3716 BU\",\n    country: \"Austria\",\n    numberrange: 6,\n    text: \"et magnis dis parturient montes, nascetur ridiculus mus. Aenean eget\",\n    alphanumeric: \"OIO77NPC4ON\",\n  },\n  {\n    name: \"Griffin Mccullough\",\n    phone: \"1-791-183-6588\",\n    postalZip: \"4526 VO\",\n    country: \"Spain\",\n    numberrange: 7,\n    text: \"Phasellus fermentum convallis ligula. Donec luctus aliquet odio. Etiam ligula\",\n    alphanumeric: \"LFR53ACJ5MW\",\n  },\n  {\n    name: \"Elton Little\",\n    phone: \"1-561-223-8354\",\n    postalZip: \"1744\",\n    country: \"Poland\",\n    numberrange: 2,\n    text: \"ornare, facilisis eget, ipsum. Donec sollicitudin adipiscing ligula. Aenean gravida\",\n    alphanumeric: \"LLX44WMR4EQ\",\n  },\n  {\n    name: \"Yuli Tyler\",\n    phone: \"(753) 273-9606\",\n    postalZip: \"11167\",\n    country: \"Australia\",\n    numberrange: 8,\n    text: \"dapibus gravida. Aliquam tincidunt, nunc ac mattis ornare, lectus ante\",\n    alphanumeric: \"HCS42JKI5UB\",\n  },\n  {\n    name: \"Mariko Finley\",\n    phone: \"1-465-988-6019\",\n    postalZip: \"29816-84933\",\n    country: \"South Africa\",\n    numberrange: 2,\n    text: \"orci quis lectus. Nullam suscipit, est ac facilisis facilisis, magna\",\n    alphanumeric: \"TPD34XWI4OW\",\n  },\n  {\n    name: \"Vivian Morris\",\n    phone: \"1-846-760-7297\",\n    postalZip: \"745942\",\n    country: \"Canada\",\n    numberrange: 2,\n    text: \"nisi. Mauris nulla. Integer urna. Vivamus molestie dapibus ligula. Aliquam\",\n    alphanumeric: \"KZD33VLC2XD\",\n  },\n  {\n    name: \"Silas Britt\",\n    phone: \"(671) 452-6278\",\n    postalZip: \"848362\",\n    country: \"Spain\",\n    numberrange: 6,\n    text: \"aliquet magna a neque. Nullam ut nisi a odio semper\",\n    alphanumeric: \"YOY46LHK2OP\",\n  },\n  {\n    name: \"Kibo Macdonald\",\n    phone: \"(156) 439-5838\",\n    postalZip: \"5889\",\n    country: \"United Kingdom\",\n    numberrange: 7,\n    text: \"augue id ante dictum cursus. Nunc mauris elit, dictum eu,\",\n    alphanumeric: \"FYT10ILV5CD\",\n  },\n  {\n    name: \"Sharon Hyde\",\n    phone: \"1-683-276-8272\",\n    postalZip: \"888983\",\n    country: \"Costa Rica\",\n    numberrange: 1,\n    text: \"mauris, aliquam eu, accumsan sed, facilisis vitae, orci. Phasellus dapibus\",\n    alphanumeric: \"XEN74JLS0NH\",\n  },\n  {\n    name: \"Kibo Gentry\",\n    phone: \"1-332-823-0282\",\n    postalZip: \"8699\",\n    country: \"Canada\",\n    numberrange: 5,\n    text: \"tincidunt, nunc ac mattis ornare, lectus ante dictum mi, ac\",\n    alphanumeric: \"DLQ05BDQ2CX\",\n  },\n  {\n    name: \"Cora Wells\",\n    phone: \"(241) 466-1237\",\n    postalZip: \"1489\",\n    country: \"South Korea\",\n    numberrange: 1,\n    text: \"imperdiet dictum magna. Ut tincidunt orci quis lectus. Nullam suscipit,\",\n    alphanumeric: \"RUP95XLR7FP\",\n  },\n  {\n    name: \"Ashton Smith\",\n    phone: \"(928) 852-6844\",\n    postalZip: \"5616\",\n    country: \"Vietnam\",\n    numberrange: 3,\n    text: \"Integer eu lacus. Quisque imperdiet, erat nonummy ultricies ornare, elit\",\n    alphanumeric: \"GAT98RPH5CC\",\n  },\n  {\n    name: \"Zia Hinton\",\n    phone: \"(556) 321-3278\",\n    postalZip: \"5760\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"Sed et libero. Proin mi. Aliquam gravida mauris ut mi.\",\n    alphanumeric: \"IYR89WGE6VR\",\n  },\n  {\n    name: \"Brianna Ellison\",\n    phone: \"1-513-332-1796\",\n    postalZip: \"7252\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"ligula. Donec luctus aliquet odio. Etiam ligula tortor, dictum eu,\",\n    alphanumeric: \"TJW35LTT8QR\",\n  },\n  {\n    name: \"Brooke Walls\",\n    phone: \"1-953-834-4745\",\n    postalZip: \"41065\",\n    country: \"Nigeria\",\n    numberrange: 6,\n    text: \"Maecenas malesuada fringilla est. Mauris eu turpis. Nulla aliquet. Proin\",\n    alphanumeric: \"TRQ15SVC1CG\",\n  },\n  {\n    name: \"Nora Daugherty\",\n    phone: \"1-256-582-4865\",\n    postalZip: \"36457\",\n    country: \"Pakistan\",\n    numberrange: 5,\n    text: \"ornare, lectus ante dictum mi, ac mattis velit justo nec\",\n    alphanumeric: \"TDQ03UOS8OY\",\n  },\n  {\n    name: \"Adara Greene\",\n    phone: \"1-548-967-2847\",\n    postalZip: \"21669\",\n    country: \"Netherlands\",\n    numberrange: 3,\n    text: \"mi pede, nonummy ut, molestie in, tempus eu, ligula. Aenean\",\n    alphanumeric: \"QVQ47QVT1RR\",\n  },\n  {\n    name: \"Macaulay O'Neill\",\n    phone: \"1-414-311-4835\",\n    postalZip: \"1168\",\n    country: \"Russian Federation\",\n    numberrange: 1,\n    text: \"luctus aliquet odio. Etiam ligula tortor, dictum eu, placerat eget,\",\n    alphanumeric: \"CPF75TAC2CD\",\n  },\n  {\n    name: \"Adena Rose\",\n    phone: \"1-315-734-6117\",\n    postalZip: \"46164\",\n    country: \"Italy\",\n    numberrange: 2,\n    text: \"Morbi non sapien molestie orci tincidunt adipiscing. Mauris molestie pharetra\",\n    alphanumeric: \"TOE24YKN5KG\",\n  },\n  {\n    name: \"Adara Murphy\",\n    phone: \"(678) 844-8611\",\n    postalZip: \"398362\",\n    country: \"Colombia\",\n    numberrange: 4,\n    text: \"Nulla interdum. Curabitur dictum. Phasellus in felis. Nulla tempor augue\",\n    alphanumeric: \"UXD35OMS8MS\",\n  },\n  {\n    name: \"Brenden Bean\",\n    phone: \"(754) 709-2537\",\n    postalZip: \"3716 BU\",\n    country: \"Austria\",\n    numberrange: 6,\n    text: \"et magnis dis parturient montes, nascetur ridiculus mus. Aenean eget\",\n    alphanumeric: \"OIO77NPC4ON\",\n  },\n  {\n    name: \"Griffin Mccullough\",\n    phone: \"1-791-183-6588\",\n    postalZip: \"4526 VO\",\n    country: \"Spain\",\n    numberrange: 7,\n    text: \"Phasellus fermentum convallis ligula. Donec luctus aliquet odio. Etiam ligula\",\n    alphanumeric: \"LFR53ACJ5MW\",\n  },\n  {\n    name: \"Elton Little\",\n    phone: \"1-561-223-8354\",\n    postalZip: \"1744\",\n    country: \"Poland\",\n    numberrange: 2,\n    text: \"ornare, facilisis eget, ipsum. Donec sollicitudin adipiscing ligula. Aenean gravida\",\n    alphanumeric: \"LLX44WMR4EQ\",\n  },\n  {\n    name: \"Yuli Tyler\",\n    phone: \"(753) 273-9606\",\n    postalZip: \"11167\",\n    country: \"Australia\",\n    numberrange: 8,\n    text: \"dapibus gravida. Aliquam tincidunt, nunc ac mattis ornare, lectus ante\",\n    alphanumeric: \"HCS42JKI5UB\",\n  },\n  {\n    name: \"Mariko Finley\",\n    phone: \"1-465-988-6019\",\n    postalZip: \"29816-84933\",\n    country: \"South Africa\",\n    numberrange: 2,\n    text: \"orci quis lectus. Nullam suscipit, est ac facilisis facilisis, magna\",\n    alphanumeric: \"TPD34XWI4OW\",\n  },\n  {\n    name: \"Vivian Morris\",\n    phone: \"1-846-760-7297\",\n    postalZip: \"745942\",\n    country: \"Canada\",\n    numberrange: 2,\n    text: \"nisi. Mauris nulla. Integer urna. Vivamus molestie dapibus ligula. Aliquam\",\n    alphanumeric: \"KZD33VLC2XD\",\n  },\n  {\n    name: \"Silas Britt\",\n    phone: \"(671) 452-6278\",\n    postalZip: \"848362\",\n    country: \"Spain\",\n    numberrange: 6,\n    text: \"aliquet magna a neque. Nullam ut nisi a odio semper\",\n    alphanumeric: \"YOY46LHK2OP\",\n  },\n  {\n    name: \"Kibo Macdonald\",\n    phone: \"(156) 439-5838\",\n    postalZip: \"5889\",\n    country: \"United Kingdom\",\n    numberrange: 7,\n    text: \"augue id ante dictum cursus. Nunc mauris elit, dictum eu,\",\n    alphanumeric: \"FYT10ILV5CD\",\n  },\n  {\n    name: \"Sharon Hyde\",\n    phone: \"1-683-276-8272\",\n    postalZip: \"888983\",\n    country: \"Costa Rica\",\n    numberrange: 1,\n    text: \"mauris, aliquam eu, accumsan sed, facilisis vitae, orci. Phasellus dapibus\",\n    alphanumeric: \"XEN74JLS0NH\",\n  },\n  {\n    name: \"Kibo Gentry\",\n    phone: \"1-332-823-0282\",\n    postalZip: \"8699\",\n    country: \"Canada\",\n    numberrange: 5,\n    text: \"tincidunt, nunc ac mattis ornare, lectus ante dictum mi, ac\",\n    alphanumeric: \"DLQ05BDQ2CX\",\n  },\n  {\n    name: \"Cora Wells\",\n    phone: \"(241) 466-1237\",\n    postalZip: \"1489\",\n    country: \"South Korea\",\n    numberrange: 1,\n    text: \"imperdiet dictum magna. Ut tincidunt orci quis lectus. Nullam suscipit,\",\n    alphanumeric: \"RUP95XLR7FP\",\n  },\n  {\n    name: \"Ashton Smith\",\n    phone: \"(928) 852-6844\",\n    postalZip: \"5616\",\n    country: \"Vietnam\",\n    numberrange: 3,\n    text: \"Integer eu lacus. Quisque imperdiet, erat nonummy ultricies ornare, elit\",\n    alphanumeric: \"GAT98RPH5CC\",\n  },\n  {\n    name: \"Zia Hinton\",\n    phone: \"(556) 321-3278\",\n    postalZip: \"5760\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"Sed et libero. Proin mi. Aliquam gravida mauris ut mi.\",\n    alphanumeric: \"IYR89WGE6VR\",\n  },\n  {\n    name: \"Brianna Ellison\",\n    phone: \"1-513-332-1796\",\n    postalZip: \"7252\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"ligula. Donec luctus aliquet odio. Etiam ligula tortor, dictum eu,\",\n    alphanumeric: \"TJW35LTT8QR\",\n  },\n  {\n    name: \"Brooke Walls\",\n    phone: \"1-953-834-4745\",\n    postalZip: \"41065\",\n    country: \"Nigeria\",\n    numberrange: 6,\n    text: \"Maecenas malesuada fringilla est. Mauris eu turpis. Nulla aliquet. Proin\",\n    alphanumeric: \"TRQ15SVC1CG\",\n  },\n  {\n    name: \"Nora Daugherty\",\n    phone: \"1-256-582-4865\",\n    postalZip: \"36457\",\n    country: \"Pakistan\",\n    numberrange: 5,\n    text: \"ornare, lectus ante dictum mi, ac mattis velit justo nec\",\n    alphanumeric: \"TDQ03UOS8OY\",\n  },\n  {\n    name: \"Adara Greene\",\n    phone: \"1-548-967-2847\",\n    postalZip: \"21669\",\n    country: \"Netherlands\",\n    numberrange: 3,\n    text: \"mi pede, nonummy ut, molestie in, tempus eu, ligula. Aenean\",\n    alphanumeric: \"QVQ47QVT1RR\",\n  },\n  {\n    name: \"Macaulay O'Neill\",\n    phone: \"1-414-311-4835\",\n    postalZip: \"1168\",\n    country: \"Russian Federation\",\n    numberrange: 1,\n    text: \"luctus aliquet odio. Etiam ligula tortor, dictum eu, placerat eget,\",\n    alphanumeric: \"CPF75TAC2CD\",\n  },\n  {\n    name: \"Adena Rose\",\n    phone: \"1-315-734-6117\",\n    postalZip: \"46164\",\n    country: \"Italy\",\n    numberrange: 2,\n    text: \"Morbi non sapien molestie orci tincidunt adipiscing. Mauris molestie pharetra\",\n    alphanumeric: \"TOE24YKN5KG\",\n  },\n  {\n    name: \"Adara Murphy\",\n    phone: \"(678) 844-8611\",\n    postalZip: \"398362\",\n    country: \"Colombia\",\n    numberrange: 4,\n    text: \"Nulla interdum. Curabitur dictum. Phasellus in felis. Nulla tempor augue\",\n    alphanumeric: \"UXD35OMS8MS\",\n  },\n  {\n    name: \"Brenden Bean\",\n    phone: \"(754) 709-2537\",\n    postalZip: \"3716 BU\",\n    country: \"Austria\",\n    numberrange: 6,\n    text: \"et magnis dis parturient montes, nascetur ridiculus mus. Aenean eget\",\n    alphanumeric: \"OIO77NPC4ON\",\n  },\n  {\n    name: \"Griffin Mccullough\",\n    phone: \"1-791-183-6588\",\n    postalZip: \"4526 VO\",\n    country: \"Spain\",\n    numberrange: 7,\n    text: \"Phasellus fermentum convallis ligula. Donec luctus aliquet odio. Etiam ligula\",\n    alphanumeric: \"LFR53ACJ5MW\",\n  },\n  {\n    name: \"Elton Little\",\n    phone: \"1-561-223-8354\",\n    postalZip: \"1744\",\n    country: \"Poland\",\n    numberrange: 2,\n    text: \"ornare, facilisis eget, ipsum. Donec sollicitudin adipiscing ligula. Aenean gravida\",\n    alphanumeric: \"LLX44WMR4EQ\",\n  },\n  {\n    name: \"Yuli Tyler\",\n    phone: \"(753) 273-9606\",\n    postalZip: \"11167\",\n    country: \"Australia\",\n    numberrange: 8,\n    text: \"dapibus gravida. Aliquam tincidunt, nunc ac mattis ornare, lectus ante\",\n    alphanumeric: \"HCS42JKI5UB\",\n  },\n  {\n    name: \"Mariko Finley\",\n    phone: \"1-465-988-6019\",\n    postalZip: \"29816-84933\",\n    country: \"South Africa\",\n    numberrange: 2,\n    text: \"orci quis lectus. Nullam suscipit, est ac facilisis facilisis, magna\",\n    alphanumeric: \"TPD34XWI4OW\",\n  },\n  {\n    name: \"Vivian Morris\",\n    phone: \"1-846-760-7297\",\n    postalZip: \"745942\",\n    country: \"Canada\",\n    numberrange: 2,\n    text: \"nisi. Mauris nulla. Integer urna. Vivamus molestie dapibus ligula. Aliquam\",\n    alphanumeric: \"KZD33VLC2XD\",\n  },\n  {\n    name: \"Silas Britt\",\n    phone: \"(671) 452-6278\",\n    postalZip: \"848362\",\n    country: \"Spain\",\n    numberrange: 6,\n    text: \"aliquet magna a neque. Nullam ut nisi a odio semper\",\n    alphanumeric: \"YOY46LHK2OP\",\n  },\n  {\n    name: \"Kibo Macdonald\",\n    phone: \"(156) 439-5838\",\n    postalZip: \"5889\",\n    country: \"United Kingdom\",\n    numberrange: 7,\n    text: \"augue id ante dictum cursus. Nunc mauris elit, dictum eu,\",\n    alphanumeric: \"FYT10ILV5CD\",\n  },\n  {\n    name: \"Sharon Hyde\",\n    phone: \"1-683-276-8272\",\n    postalZip: \"888983\",\n    country: \"Costa Rica\",\n    numberrange: 1,\n    text: \"mauris, aliquam eu, accumsan sed, facilisis vitae, orci. Phasellus dapibus\",\n    alphanumeric: \"XEN74JLS0NH\",\n  },\n  {\n    name: \"Kibo Gentry\",\n    phone: \"1-332-823-0282\",\n    postalZip: \"8699\",\n    country: \"Canada\",\n    numberrange: 5,\n    text: \"tincidunt, nunc ac mattis ornare, lectus ante dictum mi, ac\",\n    alphanumeric: \"DLQ05BDQ2CX\",\n  },\n  {\n    name: \"Cora Wells\",\n    phone: \"(241) 466-1237\",\n    postalZip: \"1489\",\n    country: \"South Korea\",\n    numberrange: 1,\n    text: \"imperdiet dictum magna. Ut tincidunt orci quis lectus. Nullam suscipit,\",\n    alphanumeric: \"RUP95XLR7FP\",\n  },\n  {\n    name: \"Ashton Smith\",\n    phone: \"(928) 852-6844\",\n    postalZip: \"5616\",\n    country: \"Vietnam\",\n    numberrange: 3,\n    text: \"Integer eu lacus. Quisque imperdiet, erat nonummy ultricies ornare, elit\",\n    alphanumeric: \"GAT98RPH5CC\",\n  },\n  {\n    name: \"Zia Hinton\",\n    phone: \"(556) 321-3278\",\n    postalZip: \"5760\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"Sed et libero. Proin mi. Aliquam gravida mauris ut mi.\",\n    alphanumeric: \"IYR89WGE6VR\",\n  },\n  {\n    name: \"Brianna Ellison\",\n    phone: \"1-513-332-1796\",\n    postalZip: \"7252\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"ligula. Donec luctus aliquet odio. Etiam ligula tortor, dictum eu,\",\n    alphanumeric: \"TJW35LTT8QR\",\n  },\n  {\n    name: \"Brooke Walls\",\n    phone: \"1-953-834-4745\",\n    postalZip: \"41065\",\n    country: \"Nigeria\",\n    numberrange: 6,\n    text: \"Maecenas malesuada fringilla est. Mauris eu turpis. Nulla aliquet. Proin\",\n    alphanumeric: \"TRQ15SVC1CG\",\n  },\n  {\n    name: \"Nora Daugherty\",\n    phone: \"1-256-582-4865\",\n    postalZip: \"36457\",\n    country: \"Pakistan\",\n    numberrange: 5,\n    text: \"ornare, lectus ante dictum mi, ac mattis velit justo nec\",\n    alphanumeric: \"TDQ03UOS8OY\",\n  },\n  {\n    name: \"Adara Greene\",\n    phone: \"1-548-967-2847\",\n    postalZip: \"21669\",\n    country: \"Netherlands\",\n    numberrange: 3,\n    text: \"mi pede, nonummy ut, molestie in, tempus eu, ligula. Aenean\",\n    alphanumeric: \"QVQ47QVT1RR\",\n  },\n  {\n    name: \"Macaulay O'Neill\",\n    phone: \"1-414-311-4835\",\n    postalZip: \"1168\",\n    country: \"Russian Federation\",\n    numberrange: 1,\n    text: \"luctus aliquet odio. Etiam ligula tortor, dictum eu, placerat eget,\",\n    alphanumeric: \"CPF75TAC2CD\",\n  },\n  {\n    name: \"Adena Rose\",\n    phone: \"1-315-734-6117\",\n    postalZip: \"46164\",\n    country: \"Italy\",\n    numberrange: 2,\n    text: \"Morbi non sapien molestie orci tincidunt adipiscing. Mauris molestie pharetra\",\n    alphanumeric: \"TOE24YKN5KG\",\n  },\n  {\n    name: \"Adara Murphy\",\n    phone: \"(678) 844-8611\",\n    postalZip: \"398362\",\n    country: \"Colombia\",\n    numberrange: 4,\n    text: \"Nulla interdum. Curabitur dictum. Phasellus in felis. Nulla tempor augue\",\n    alphanumeric: \"UXD35OMS8MS\",\n  },\n  {\n    name: \"Brenden Bean\",\n    phone: \"(754) 709-2537\",\n    postalZip: \"3716 BU\",\n    country: \"Austria\",\n    numberrange: 6,\n    text: \"et magnis dis parturient montes, nascetur ridiculus mus. Aenean eget\",\n    alphanumeric: \"OIO77NPC4ON\",\n  },\n  {\n    name: \"Griffin Mccullough\",\n    phone: \"1-791-183-6588\",\n    postalZip: \"4526 VO\",\n    country: \"Spain\",\n    numberrange: 7,\n    text: \"Phasellus fermentum convallis ligula. Donec luctus aliquet odio. Etiam ligula\",\n    alphanumeric: \"LFR53ACJ5MW\",\n  },\n  {\n    name: \"Elton Little\",\n    phone: \"1-561-223-8354\",\n    postalZip: \"1744\",\n    country: \"Poland\",\n    numberrange: 2,\n    text: \"ornare, facilisis eget, ipsum. Donec sollicitudin adipiscing ligula. Aenean gravida\",\n    alphanumeric: \"LLX44WMR4EQ\",\n  },\n  {\n    name: \"Yuli Tyler\",\n    phone: \"(753) 273-9606\",\n    postalZip: \"11167\",\n    country: \"Australia\",\n    numberrange: 8,\n    text: \"dapibus gravida. Aliquam tincidunt, nunc ac mattis ornare, lectus ante\",\n    alphanumeric: \"HCS42JKI5UB\",\n  },\n  {\n    name: \"Mariko Finley\",\n    phone: \"1-465-988-6019\",\n    postalZip: \"29816-84933\",\n    country: \"South Africa\",\n    numberrange: 2,\n    text: \"orci quis lectus. Nullam suscipit, est ac facilisis facilisis, magna\",\n    alphanumeric: \"TPD34XWI4OW\",\n  },\n  {\n    name: \"Vivian Morris\",\n    phone: \"1-846-760-7297\",\n    postalZip: \"745942\",\n    country: \"Canada\",\n    numberrange: 2,\n    text: \"nisi. Mauris nulla. Integer urna. Vivamus molestie dapibus ligula. Aliquam\",\n    alphanumeric: \"KZD33VLC2XD\",\n  },\n  {\n    name: \"Silas Britt\",\n    phone: \"(671) 452-6278\",\n    postalZip: \"848362\",\n    country: \"Spain\",\n    numberrange: 6,\n    text: \"aliquet magna a neque. Nullam ut nisi a odio semper\",\n    alphanumeric: \"YOY46LHK2OP\",\n  },\n  {\n    name: \"Kibo Macdonald\",\n    phone: \"(156) 439-5838\",\n    postalZip: \"5889\",\n    country: \"United Kingdom\",\n    numberrange: 7,\n    text: \"augue id ante dictum cursus. Nunc mauris elit, dictum eu,\",\n    alphanumeric: \"FYT10ILV5CD\",\n  },\n  {\n    name: \"Sharon Hyde\",\n    phone: \"1-683-276-8272\",\n    postalZip: \"888983\",\n    country: \"Costa Rica\",\n    numberrange: 1,\n    text: \"mauris, aliquam eu, accumsan sed, facilisis vitae, orci. Phasellus dapibus\",\n    alphanumeric: \"XEN74JLS0NH\",\n  },\n  {\n    name: \"Kibo Gentry\",\n    phone: \"1-332-823-0282\",\n    postalZip: \"8699\",\n    country: \"Canada\",\n    numberrange: 5,\n    text: \"tincidunt, nunc ac mattis ornare, lectus ante dictum mi, ac\",\n    alphanumeric: \"DLQ05BDQ2CX\",\n  },\n  {\n    name: \"Cora Wells\",\n    phone: \"(241) 466-1237\",\n    postalZip: \"1489\",\n    country: \"South Korea\",\n    numberrange: 1,\n    text: \"imperdiet dictum magna. Ut tincidunt orci quis lectus. Nullam suscipit,\",\n    alphanumeric: \"RUP95XLR7FP\",\n  },\n  {\n    name: \"Ashton Smith\",\n    phone: \"(928) 852-6844\",\n    postalZip: \"5616\",\n    country: \"Vietnam\",\n    numberrange: 3,\n    text: \"Integer eu lacus. Quisque imperdiet, erat nonummy ultricies ornare, elit\",\n    alphanumeric: \"GAT98RPH5CC\",\n  },\n  {\n    name: \"Zia Hinton\",\n    phone: \"(556) 321-3278\",\n    postalZip: \"5760\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"Sed et libero. Proin mi. Aliquam gravida mauris ut mi.\",\n    alphanumeric: \"IYR89WGE6VR\",\n  },\n  {\n    name: \"Brianna Ellison\",\n    phone: \"1-513-332-1796\",\n    postalZip: \"7252\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"ligula. Donec luctus aliquet odio. Etiam ligula tortor, dictum eu,\",\n    alphanumeric: \"TJW35LTT8QR\",\n  },\n  {\n    name: \"Brooke Walls\",\n    phone: \"1-953-834-4745\",\n    postalZip: \"41065\",\n    country: \"Nigeria\",\n    numberrange: 6,\n    text: \"Maecenas malesuada fringilla est. Mauris eu turpis. Nulla aliquet. Proin\",\n    alphanumeric: \"TRQ15SVC1CG\",\n  },\n  {\n    name: \"Nora Daugherty\",\n    phone: \"1-256-582-4865\",\n    postalZip: \"36457\",\n    country: \"Pakistan\",\n    numberrange: 5,\n    text: \"ornare, lectus ante dictum mi, ac mattis velit justo nec\",\n    alphanumeric: \"TDQ03UOS8OY\",\n  },\n  {\n    name: \"Adara Greene\",\n    phone: \"1-548-967-2847\",\n    postalZip: \"21669\",\n    country: \"Netherlands\",\n    numberrange: 3,\n    text: \"mi pede, nonummy ut, molestie in, tempus eu, ligula. Aenean\",\n    alphanumeric: \"QVQ47QVT1RR\",\n  },\n  {\n    name: \"Macaulay O'Neill\",\n    phone: \"1-414-311-4835\",\n    postalZip: \"1168\",\n    country: \"Russian Federation\",\n    numberrange: 1,\n    text: \"luctus aliquet odio. Etiam ligula tortor, dictum eu, placerat eget,\",\n    alphanumeric: \"CPF75TAC2CD\",\n  },\n  {\n    name: \"Adena Rose\",\n    phone: \"1-315-734-6117\",\n    postalZip: \"46164\",\n    country: \"Italy\",\n    numberrange: 2,\n    text: \"Morbi non sapien molestie orci tincidunt adipiscing. Mauris molestie pharetra\",\n    alphanumeric: \"TOE24YKN5KG\",\n  },\n  {\n    name: \"Adara Murphy\",\n    phone: \"(678) 844-8611\",\n    postalZip: \"398362\",\n    country: \"Colombia\",\n    numberrange: 4,\n    text: \"Nulla interdum. Curabitur dictum. Phasellus in felis. Nulla tempor augue\",\n    alphanumeric: \"UXD35OMS8MS\",\n  },\n  {\n    name: \"Brenden Bean\",\n    phone: \"(754) 709-2537\",\n    postalZip: \"3716 BU\",\n    country: \"Austria\",\n    numberrange: 6,\n    text: \"et magnis dis parturient montes, nascetur ridiculus mus. Aenean eget\",\n    alphanumeric: \"OIO77NPC4ON\",\n  },\n  {\n    name: \"Griffin Mccullough\",\n    phone: \"1-791-183-6588\",\n    postalZip: \"4526 VO\",\n    country: \"Spain\",\n    numberrange: 7,\n    text: \"Phasellus fermentum convallis ligula. Donec luctus aliquet odio. Etiam ligula\",\n    alphanumeric: \"LFR53ACJ5MW\",\n  },\n  {\n    name: \"Elton Little\",\n    phone: \"1-561-223-8354\",\n    postalZip: \"1744\",\n    country: \"Poland\",\n    numberrange: 2,\n    text: \"ornare, facilisis eget, ipsum. Donec sollicitudin adipiscing ligula. Aenean gravida\",\n    alphanumeric: \"LLX44WMR4EQ\",\n  },\n  {\n    name: \"Yuli Tyler\",\n    phone: \"(753) 273-9606\",\n    postalZip: \"11167\",\n    country: \"Australia\",\n    numberrange: 8,\n    text: \"dapibus gravida. Aliquam tincidunt, nunc ac mattis ornare, lectus ante\",\n    alphanumeric: \"HCS42JKI5UB\",\n  },\n  {\n    name: \"Mariko Finley\",\n    phone: \"1-465-988-6019\",\n    postalZip: \"29816-84933\",\n    country: \"South Africa\",\n    numberrange: 2,\n    text: \"orci quis lectus. Nullam suscipit, est ac facilisis facilisis, magna\",\n    alphanumeric: \"TPD34XWI4OW\",\n  },\n  {\n    name: \"Vivian Morris\",\n    phone: \"1-846-760-7297\",\n    postalZip: \"745942\",\n    country: \"Canada\",\n    numberrange: 2,\n    text: \"nisi. Mauris nulla. Integer urna. Vivamus molestie dapibus ligula. Aliquam\",\n    alphanumeric: \"KZD33VLC2XD\",\n  },\n  {\n    name: \"Silas Britt\",\n    phone: \"(671) 452-6278\",\n    postalZip: \"848362\",\n    country: \"Spain\",\n    numberrange: 6,\n    text: \"aliquet magna a neque. Nullam ut nisi a odio semper\",\n    alphanumeric: \"YOY46LHK2OP\",\n  },\n  {\n    name: \"Kibo Macdonald\",\n    phone: \"(156) 439-5838\",\n    postalZip: \"5889\",\n    country: \"United Kingdom\",\n    numberrange: 7,\n    text: \"augue id ante dictum cursus. Nunc mauris elit, dictum eu,\",\n    alphanumeric: \"FYT10ILV5CD\",\n  },\n  {\n    name: \"Sharon Hyde\",\n    phone: \"1-683-276-8272\",\n    postalZip: \"888983\",\n    country: \"Costa Rica\",\n    numberrange: 1,\n    text: \"mauris, aliquam eu, accumsan sed, facilisis vitae, orci. Phasellus dapibus\",\n    alphanumeric: \"XEN74JLS0NH\",\n  },\n  {\n    name: \"Kibo Gentry\",\n    phone: \"1-332-823-0282\",\n    postalZip: \"8699\",\n    country: \"Canada\",\n    numberrange: 5,\n    text: \"tincidunt, nunc ac mattis ornare, lectus ante dictum mi, ac\",\n    alphanumeric: \"DLQ05BDQ2CX\",\n  },\n  {\n    name: \"Cora Wells\",\n    phone: \"(241) 466-1237\",\n    postalZip: \"1489\",\n    country: \"South Korea\",\n    numberrange: 1,\n    text: \"imperdiet dictum magna. Ut tincidunt orci quis lectus. Nullam suscipit,\",\n    alphanumeric: \"RUP95XLR7FP\",\n  },\n  {\n    name: \"Ashton Smith\",\n    phone: \"(928) 852-6844\",\n    postalZip: \"5616\",\n    country: \"Vietnam\",\n    numberrange: 3,\n    text: \"Integer eu lacus. Quisque imperdiet, erat nonummy ultricies ornare, elit\",\n    alphanumeric: \"GAT98RPH5CC\",\n  },\n  {\n    name: \"Zia Hinton\",\n    phone: \"(556) 321-3278\",\n    postalZip: \"5760\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"Sed et libero. Proin mi. Aliquam gravida mauris ut mi.\",\n    alphanumeric: \"IYR89WGE6VR\",\n  },\n  {\n    name: \"Brianna Ellison\",\n    phone: \"1-513-332-1796\",\n    postalZip: \"7252\",\n    country: \"Spain\",\n    numberrange: 3,\n    text: \"ligula. Donec luctus aliquet odio. Etiam ligula tortor, dictum eu,\",\n    alphanumeric: \"TJW35LTT8QR\",\n  },\n  {\n    name: \"Brooke Walls\",\n    phone: \"1-953-834-4745\",\n    postalZip: \"41065\",\n    country: \"Nigeria\",\n    numberrange: 6,\n    text: \"Maecenas malesuada fringilla est. Mauris eu turpis. Nulla aliquet. Proin\",\n    alphanumeric: \"TRQ15SVC1CG\",\n  },\n  {\n    name: \"Nora Daugherty\",\n    phone: \"1-256-582-4865\",\n    postalZip: \"36457\",\n    country: \"Pakistan\",\n    numberrange: 5,\n    text: \"ornare, lectus ante dictum mi, ac mattis velit justo nec\",\n    alphanumeric: \"TDQ03UOS8OY\",\n  },\n  {\n    name: \"Adara Greene\",\n    phone: \"1-548-967-2847\",\n    postalZip: \"21669\",\n    country: \"Netherlands\",\n    numberrange: 3,\n    text: \"mi pede, nonummy ut, molestie in, tempus eu, ligula. Aenean\",\n    alphanumeric: \"QVQ47QVT1RR\",\n  },\n  {\n    name: \"Macaulay O'Neill\",\n    phone: \"1-414-311-4835\",\n    postalZip: \"1168\",\n    country: \"Russian Federation\",\n    numberrange: 1,\n    text: \"luctus aliquet odio. Etiam ligula tortor, dictum eu, placerat eget,\",\n    alphanumeric: \"CPF75TAC2CD\",\n  },\n  {\n    name: \"Adena Rose\",\n    phone: \"1-315-734-6117\",\n    postalZip: \"46164\",\n    country: \"Italy\",\n    numberrange: 2,\n    text: \"Morbi non sapien molestie orci tincidunt adipiscing. Mauris molestie pharetra\",\n    alphanumeric: \"TOE24YKN5KG\",\n  },\n  {\n    name: \"Adara Murphy\",\n    phone: \"(678) 844-8611\",\n    postalZip: \"398362\",\n    country: \"Colombia\",\n    numberrange: 4,\n    text: \"Nulla interdum. Curabitur dictum. Phasellus in felis. Nulla tempor augue\",\n    alphanumeric: \"UXD35OMS8MS\",\n  },\n  {\n    name: \"Brenden Bean\",\n    phone: \"(754) 709-2537\",\n    postalZip: \"3716 BU\",\n    country: \"Austria\",\n    numberrange: 6,\n    text: \"et magnis dis parturient montes, nascetur ridiculus mus. Aenean eget\",\n    alphanumeric: \"OIO77NPC4ON\",\n  },\n  {\n    name: \"Griffin Mccullough\",\n    phone: \"1-791-183-6588\",\n    postalZip: \"4526 VO\",\n    country: \"Spain\",\n    numberrange: 7,\n    text: \"Phasellus fermentum convallis ligula. Donec luctus aliquet odio. Etiam ligula\",\n    alphanumeric: \"LFR53ACJ5MW\",\n  },\n  {\n    name: \"Elton Little\",\n    phone: \"1-561-223-8354\",\n    postalZip: \"1744\",\n    country: \"Poland\",\n    numberrange: 2,\n    text: \"ornare, facilisis eget, ipsum. Donec sollicitudin adipiscing ligula. Aenean gravida\",\n    alphanumeric: \"LLX44WMR4EQ\",\n  },\n  {\n    name: \"Yuli Tyler\",\n    phone: \"(753) 273-9606\",\n    postalZip: \"11167\",\n    country: \"Australia\",\n    numberrange: 8,\n    text: \"dapibus gravida. Aliquam tincidunt, nunc ac mattis ornare, lectus ante\",\n    alphanumeric: \"HCS42JKI5UB\",\n  },\n  {\n    name: \"Mariko Finley\",\n    phone: \"1-465-988-6019\",\n    postalZip: \"29816-84933\",\n    country: \"South Africa\",\n    numberrange: 2,\n    text: \"orci quis lectus. Nullam suscipit, est ac facilisis facilisis, magna\",\n    alphanumeric: \"TPD34XWI4OW\",\n  },\n  {\n    name: \"Vivian Morris\",\n    phone: \"1-846-760-7297\",\n    postalZip: \"745942\",\n    country: \"Canada\",\n    numberrange: 2,\n    text: \"nisi. Mauris nulla. Integer urna. Vivamus molestie dapibus ligula. Aliquam\",\n    alphanumeric: \"KZD33VLC2XD\",\n  },\n];\n\nexport const dataSize = data.length;\n", "import { data, dataSize } from \"./fake-data\";\n\ninterface Props {\n  page: number;\n  limit: number;\n}\nexport const getTableData = async ({ page, limit }: Props) => {\n  const maxNumPages = dataSize / limit;\n  const pageSize = dataSize / maxNumPages;\n  const cursor = pageSize * page;\n  return data.slice(cursor, cursor + (limit || pageSize));\n};\n", "import { RandomData, data as RawData } from \"~/mock-api/fake-data\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport React from \"react\";\nimport {\n  Form,\n  useSearchParams,\n  useSubmit,\n  useTransition,\n} from \"@remix-run/react\";\n\ninterface TableProps {\n  data: RandomData[];\n}\n\nconst COLUMN_DEFINITION: GridColDef[] = [\n  {\n    field: \"name\",\n  },\n  {\n    field: \"phone\",\n  },\n  {\n    field: \"postalzip\",\n  },\n  {\n    field: \"country\",\n  },\n  {\n    field: \"numberrange\",\n  },\n  {\n    field: \"text\",\n  },\n  {\n    field: \"alphanumeric\",\n  },\n];\n\nexport const Table: React.FC<TableProps> = ({ data }) => {\n  const transition = useTransition();\n  const [params] = useSearchParams();\n  const [pageSize, setPageSize] = React.useState(\n    parseInt(params.get(\"limit\") || \"5\")\n  );\n  const [currentPage, setCurrentPage] = React.useState(\n    parseInt(params.get(\"page\") || \"0\")\n  );\n\n  const submit = useSubmit();\n\n  const rows = data.map((row, index) => ({\n    ...row,\n    id: `${row.name}-${index}`,\n  }));\n  return (\n    <React.Fragment>\n      <Form method=\"get\">\n        <input type=\"hidden\" name=\"page\" value={currentPage} />\n        <input type=\"hidden\" name=\"limit\" value={pageSize} />\n      </Form>\n      <DataGrid\n        loading={!!transition.submission}\n        columns={COLUMN_DEFINITION}\n        rows={rows}\n        autoHeight={true}\n        pageSize={pageSize}\n        onPageSizeChange={(newPageSize) => {\n          setPageSize(newPageSize);\n          submit(\n            {\n              page: currentPage.toString(),\n              limit: newPageSize.toString(),\n            },\n            {\n              replace: true,\n            }\n          );\n        }}\n        onPageChange={(newPage) => {\n          setCurrentPage(newPage);\n          submit(\n            {\n              page: newPage.toString(),\n              limit: pageSize.toString(),\n            },\n            {\n              replace: true,\n            }\n          );\n        }}\n        rowsPerPageOptions={[5, 10, 15]}\n        paginationMode=\"server\"\n        rowCount={RawData.length}\n      />\n    </React.Fragment>\n  );\n};\n", "export default {'version':'5251009a','entry':{'module':'/build/entry.client-NDHM337X.js','imports':['/build/_shared/chunk-V2YSZ6YM.js','/build/_shared/chunk-QZ33G7UR.js','/build/_shared/chunk-XV23MX66.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-4VPS3JXU.js','imports':['/build/_shared/chunk-X3HMJSI5.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-S4URR2E2.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-U2FN77G3.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-MJX3EL6O.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/table':{'id':'routes/table','parentId':'root','path':'table','index':undefined,'caseSensitive':undefined,'module':'/build/routes/table-NAWEFESA.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-5251009A.js'};", "\nimport * as entryServer from \"/Users/lucasshadler/ff/remix-trial/app/entry.server.tsx\";\nimport * as route0 from \"/Users/lucasshadler/ff/remix-trial/app/root.tsx\";\nimport * as route1 from \"/Users/lucasshadler/ff/remix-trial/app/routes/logout.ts\";\nimport * as route2 from \"/Users/lucasshadler/ff/remix-trial/app/routes/index.tsx\";\nimport * as route3 from \"/Users/lucasshadler/ff/remix-trial/app/routes/login.tsx\";\nimport * as route4 from \"/Users/lucasshadler/ff/remix-trial/app/routes/table.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/table\": {\n      id: \"routes/table\",\n      parentId: \"root\",\n      path: \"table\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": []
}
